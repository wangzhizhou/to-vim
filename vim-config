#!/usr/bin/env bash
#-*- coding:utf-8 -*-

# Check whether git has been installed
git --version
if [ $? -ne 0 ]
then
    echo "You should install the git, then config your vim"
fi 

# vim-plug: https://github.com/junegunn/vim-plug
# Minimalist Vim Plugin Manager
# Unix
plugin_file=~/.vim/autoload/plug.vim
if [ ! -f $plugin_file ]
then
    curl -fLo $plugin_file --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
else
    echo you have installed plugin: $plugin_file
fi

VIMRC_FILE=~/.vimrc
VIMRC_BAK_FILE=~/.vimrc.bak
if [ ! -f $VIMRC_BAK_FILE ]
then
    mv $VIMRC_FILE $VIMRC_BAK_FILE
    echo your original .vimrc file have been renamed .vimrc.bak for recover
fi

cat > $VIMRC_FILE <<EOF
" Cancel backup and swapfile
set nobackup
set noswapfile

" set document coding schema
set encoding=utf-8

" display the number of line
set number

" cancel wrap line
set nowrap

" display the current cursor position
set ruler

" set the indent to 4 space
set cindent
set tabstop=4
set shiftwidth=4

" hightlight the current line
set cursorline

" set find function
set ic
set hls
set is

" set show vim mode on the left-bottom corner
set showmode

" set code fold close when launch vim
set nofoldenable

" set the vim theme
syntax enable
set background=dark

" all support colorscheme default located in directory: /usr/local/share/vim/vim80/colors/
colorscheme murphy


" Install PlugIn and config them
call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'Xuyuanp/nerdtree-git-plugin'
 
autocmd vimenter * NERDTree
map <C-n> :NERDTreeToggle <CR>
let NERDTreeShowHidden=1
let g:NERDTreeShowIgnoredStatus = 1
let g:nerdtree_tabs_open_on_console_startup=1
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }
 
" o 打开关闭文件或目录
" e 以文件管理的方式打开选中的目录
" t 在标签页中打开
" T 在标签页中打开，但光标仍然留在 NERDTree
" r 刷新光标所在的目录
" R 刷新当前根路径
" X 收起所有目录
" p 小写，跳转到光标所在的上一级路径
" P 大写，跳转到当前根路径
" J 到第一个节点
" K 到最后一个节点
" I 显示隐藏文件
" m 显示文件操作菜单
" C 将根路径设置为光标所在的目录
" u 设置上级目录为根路径
" ctrl + w + w 光标自动在左右侧窗口切换
" ctrl + w + r 移动当前窗口的布局位置
" :tabc 关闭当前的 tab
" :tabo   关闭所有其他的 tab
" :tabp   前一个 tab
" :tabn   后一个 tab
" gT      前一个 tab
" gt      后一个 tab


" code completion, uotation mark, path completion
Plug 'Valloric/YouCompleteMe'
Plug 'Raimondi/delimitMate'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

" syntax highlight, Check
Plug 'sheerun/vim-polyglot'
Plug 'w0rp/ale'
 
let g:ale_linters = {
\    'javascript': ['eslint'],
\    'css': ['stylelint'],
\}
let g:ale_fixers = {
\    'javascript': ['eslint'],
\    'css': ['stylelint'],
\}
let g:ale_fix_on_save = 1
 
let g:ale_sign_column_always = 1
let g:ale_sign_error = '●'
let g:ale_sign_warning = '▶'
 
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" file,code search
Plug 'rking/ag.vim'
Plug 'kien/ctrlp.vim'

" refine status bar
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" code comment
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" git
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" markdown
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" Emmet
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" Html 5
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" CSS 3
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" javascript
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" React

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'

" Prettier
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
let g:airline_theme='papercolor'
call plug#end()

" PlugInstall
" PlugUpdate
" PlugClean
" PlugUpgrade
" PlugStatus
" PlugDiff
" PlugSnapshot

EOF

if [ $? -eq 0 ]
then
    echo "Your have completed configure your vim editor"
    echo
    echo Tips:
    echo If you open an file with vim, and show the error as follow: 
    echo 
    echo    "Error detected while processing function youcompleteme#Enable[5]..<SNR>98_SetUpPython:"
    echo    "line   39:"
    echo    "E887: Sorry, this command is disabled, the Python's site module could not be loaded."
    echo
    echo You should install the vim-nox and re-install the PlugIns.
fi
echo
echo Start Vim to Install the PlugIn specified in ~/.vimrc
vim -c PlugInstall -c q -c q
echo Now, you can use your vim IDE, enjoy it!
